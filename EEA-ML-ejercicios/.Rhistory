10^chanchoWt
chanchoWt = predict(lm.mammasl[45])
chanchoWt = predict(lm.mammasl, newdata = chancho)
chanchoWt**10
chanchoWt
10^chanchoWt
chanchoWt = predict(lm.mammasl)[45]
10^chanchoWt
chanchoWt
predict(lm.mammasl)
mammals
chanchoWt = predict(lm.mammasl, newdata = chancho)
10^chanchoWt
10^chanchoWt
mammals
chanchoWt¹0
chanchoWt**10
chanchoWt^10
10**chanchoWt
ggplot(mammals, aes(x=log(BodyWt), y=log(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral") +
geom_point(data = mammals[mammals$BodyWt==192,], color = "violet")
human = data.frame("BodyWt"=log(62))
10**predict(lm.mammasl, newdata = human)
ggplot(mammals, aes(x=log(BodyWt), y=log(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral") +
geom_point(data = mammals[mammals$BodyWt==192,], color = "violet") +
geom_point(data = mammals[mammals$BodyWt==62,], color = "red")
mammals
human = data.frame("BodyWt"=62)
10**predict(lm.mammasl, newdata = human)
chancho = data.frame("BodyWt"=192)
chanchoWt = predict(lm.mammasl, newdata = chancho)
10**chanchoWt
library("datasets")
library("dplyr")
library("ggplot2")
library("tidyverse")
library("openintro")
attach(bdims)
ggplot(bdims, aes(x=hip.gi, y=wgt, color=as.factor(sex))) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la circunferencia de cadera",
x = "Circunferencia de cadera", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
cadera <- lm(wgt ~ hip.gi, data=bdims)
coef(cadera)
ggplot(bdims, aes(x=hip.gi, y=wgt, color=as.factor(sex))) +
geom_point() +
geom_smooth(method=lm , color="black", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la circunferencia de cadera",
x = "Circunferencia de cadera", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
new_case = data.frame('hip.gi'=100)
y_hat = predict(cadera, newdata = new_case)
y_hat
residuo = (81 - 74.20646)
residuo
ggplot(bdims, aes(x=hgt, y=wgt, color=as.factor(sex))) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la altura",
x = "Altura", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
altura <- lm(wgt ~ hgt, data=bdims)
coef(altura)
ggplot(bdims, aes(x=hgt, y=wgt, color=as.factor(sex))) +
geom_point() +
geom_smooth(method=lm , color="black", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la altura",
x = "Altura", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
hgt2pred = data.frame('hgt'=187)
wgt_hgt = predict(altura, newdata = hgt2pred)
wgt_hgt
81 - wgt_hgt
attach(mammals)
lm.mammasl <- lm(log10(BrainWt) ~ log10(BodyWt))
coef(lm.mammasl)
ggplot(mammals, aes(x=log10(BodyWt), y=log10(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral")
chancho = data.frame("BodyWt"=192)
chanchoWt = predict(lm.mammasl, newdata = chancho)
10**chanchoWt
ggplot(mammals, aes(x=log(BodyWt), y=log(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral") +
geom_point(data = mammals[mammals$BodyWt==192,], color = "violet")
human = data.frame("BodyWt"=62)
10**predict(lm.mammasl, newdata = human)
ggplot(mammals, aes(x=log(BodyWt), y=log(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral") +
geom_point(data = mammals[mammals$BodyWt==192,], color = "violet") +
geom_point(data = mammals[mammals$BodyWt==62,], color = "red")
attach(bdims)
library("datasets")
library("dplyr")
library("ggplot2")
library("tidyverse")
library("openintro")
attach(bdims)
library("datasets")
library("dplyr")
library("ggplot2")
library("tidyverse")
library("openintro")
attach(bdims)
ggplot(bdims, aes(x=hip.gi, y=wgt, color=as.factor(sex))) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la circunferencia de cadera",
x = "Circunferencia de cadera", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
cadera <- lm(wgt ~ hip.gi, data=bdims)
coef(cadera)
ggplot(bdims, aes(x=hip.gi, y=wgt, color=as.factor(sex))) +
geom_point() +
geom_smooth(method=lm , color="black", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la circunferencia de cadera",
x = "Circunferencia de cadera", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
new_case = data.frame('hip.gi'=100)
y_hat = predict(cadera, newdata = new_case)
y_hat
residuo = (81 - 74.20646)
residuo
ggplot(bdims, aes(x=hgt, y=wgt, color=as.factor(sex))) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la altura",
x = "Altura", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
altura <- lm(wgt ~ hgt, data=bdims)
coef(altura)
ggplot(bdims, aes(x=hgt, y=wgt, color=as.factor(sex))) +
geom_point() +
geom_smooth(method=lm , color="black", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la altura",
x = "Altura", y = "Peso") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
hgt2pred = data.frame('hgt'=187)
wgt_hgt = predict(altura, newdata = hgt2pred)
wgt_hgt
81 - wgt_hgt
attach(mammals)
lm.mammasl <- lm(log10(BrainWt) ~ log10(BodyWt))
coef(lm.mammasl)
ggplot(mammals, aes(x=log10(BodyWt), y=log10(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral")
chancho = data.frame("BodyWt"=192)
chanchoWt = predict(lm.mammasl, newdata = chancho)
10**chanchoWt
ggplot(mammals, aes(x=log(BodyWt), y=log(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral") +
geom_point(data = mammals[mammals$BodyWt==192,], color = "violet")
human = data.frame("BodyWt"=62)
10**predict(lm.mammasl, newdata = human)
ggplot(mammals, aes(x=log(BodyWt), y=log(BrainWt))) +
geom_point() +
geom_smooth(method=lm , color="blue", se=FALSE) +
theme_minimal() +
labs(title = "Scatterplot de medidas en mamíferos",
"Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral") +
geom_point(data = mammals[mammals$BodyWt==192,], color = "violet") +
geom_point(data = mammals[mammals$BodyWt==62,], color = "red")
summary(cadera)
summary(altura)
attach(bdims)
attach(bdims)
bdims
lm.cadera = lm(wgt ~ hip.gi, data=bdims)
help("predict")
IC = predict(lm.cadera, newdata = new.input, interval = "confidence", level=0.95)
new.input = data.frame("hip.gi"=100)
IC = predict(lm.cadera, newdata = new.input, interval = "confidence", level=0.95)
IP = predict(lm.cadera, newdata = new.input, interval = "prediction", level=0.95)
IC
IP
lm.cadera = lm(wgt ~ hgt, data=bdims)
new.input2 = data.frame("hgt"=175)
IC = predict(lm.cadera, newdata = new.input2, interval = "confidence", level=0.95)
IP = predict(lm.cadera, newdata = new.input2, interval = "prediction", level=0.95)
IC
IP
library("datasets")
library("dplyr")
library("ggplot2")
library("tidyverse")
library("openintro")
attach(bdims)
lm.cadera = lm(wgt ~ hip.gi, data=bdims)
new.input = data.frame("hip.gi"=100)
IC = predict(lm.cadera, newdata = new.input, interval = "confidence", level=0.95)
IP = predict(lm.cadera, newdata = new.input, interval = "prediction", level=0.95)
IC
IP
lm.cadera = lm(wgt ~ hgt, data=bdims)
new.input2 = data.frame("hgt"=175)
IC = predict(lm.cadera, newdata = new.input2, interval = "confidence", level=0.95)
IP = predict(lm.cadera, newdata = new.input2, interval = "prediction", level=0.95)
IC
IP
cor(mammals$BodyWt, mammals$BrainWt, method="spearman")
library("datasets")
library("dplyr")
library("ggplot2")
library("tidyverse")
library("openintro")
attach(mammals)
ggplot(data=mammals, aes(x=BodyWt, y=BrainWt)) +
geom_point() +
labs(title = "Scatterplot de medidas en mamíferos",
subtitle = "Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral")
attach(bdims)
ggplot(data=bdims, aes(y=wgt, x=hgt, color=as.factor(sex))) +
geom_point() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la altura", x = "Peso", y = "Altura") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
attach(smoking)
ggplot(data=na.omit(smoking), aes(y=amtWeekends, x=age)) +
geom_point() +
labs(title = "Scatterplot de datos de fumadores",
subtitle = "Cantidad de cigarrillos fumados durante el fin de semana en función de la edad",
x = "Edad", y = "Cantidad de cigarrillos")
attach(cars)
ggplot(data=cars, aes(x=weight, y=mpgCity)) +
geom_point() +
labs(title = "Scatterplot de datos de autos del año 1993",
subtitle = "Rendimiento del auto en la ciudad en función del peso del auto",
x = "Rendimiento", y = "Peso")
cor.test(bdims$wgt, bdims$hgt, method = "pearson")
cor.test(cars$weight, cars$mpgCity, method = "pearson")
cor(mammals$BodyWt, mammals$BrainWt)
mammals %>%
select(Species, BodyWt, BrainWt) %>%
arrange(desc(BodyWt), desc(BrainWt))
mammals2 <- mammals[!mammals$Species%in%c('Africanelephant','Asianelephant'),]
ggplot(data=mammals2, aes(x=BodyWt, y=BrainWt)) +
geom_point() +
labs(title = "Scatterplot de Mamíferos sin puntos máximos", subtitle = "Peso cerebral en función del peso corporal", x = "Peso corporal ", y = "Peso cerebral")
cor(mammals2$BodyWt, mammals2$BrainWt, method="pearson")
mammalslog <- mammals2 %>%
select(BodyWt, BrainWt) %>%
mutate(BodyWt=log(BodyWt),
BrainWt=log(BrainWt))
ggplot(data=mammalslog, aes(x=BodyWt, y=BrainWt)) +
geom_point() +
labs(title = "Scatterplot de Mamíferos con logaritmo", subtitle = "Peso cerebral en función del peso corporal", x = "Peso corporal ", y = "Peso cerebral")
cor(mammalslog$BodyWt, mammalslog$BrainWt, method="pearson")
cor(mammals$BodyWt, mammals$BrainWt, method="spearman")
cor(mammalslog$BodyWt, mammalslog$BrainWt, method="spearman")
mammalslog <- mammals %>%
select(BodyWt, BrainWt) %>%
mutate(BodyWt=log(BodyWt),
BrainWt=log(BrainWt))
ggplot(data=mammalslog, aes(x=BodyWt, y=BrainWt)) +
geom_point() +
labs(title = "Scatterplot de Mamíferos con logaritmo", subtitle = "Peso cerebral en función del peso corporal", x = "Peso corporal ", y = "Peso cerebral")
cor(mammalslog$BodyWt, mammalslog$BrainWt, method="pearson")
cor(mammals$BodyWt, mammals$BrainWt, method="spearman")
library("datasets")
library("dplyr")
library("ggplot2")
library("tidyverse")
library("openintro")
attach(mammals)
ggplot(data=mammals, aes(x=BodyWt, y=BrainWt)) +
geom_point() +
labs(title = "Scatterplot de medidas en mamíferos",
subtitle = "Peso cerebral en función del peso corporal",
x = "Peso corporal ", y = "Peso cerebral")
attach(bdims)
ggplot(data=bdims, aes(y=wgt, x=hgt, color=as.factor(sex))) +
geom_point() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función de la altura", x = "Peso", y = "Altura") +
scale_color_manual(name = "Sexo",
values = c("0" = "red", "1" = "blue"),
labels = c("0" = "mujeres", "1" = "varones"))
attach(smoking)
ggplot(data=na.omit(smoking), aes(y=amtWeekends, x=age)) +
geom_point() +
labs(title = "Scatterplot de datos de fumadores",
subtitle = "Cantidad de cigarrillos fumados durante el fin de semana en función de la edad",
x = "Edad", y = "Cantidad de cigarrillos")
attach(cars)
ggplot(data=cars, aes(x=weight, y=mpgCity)) +
geom_point() +
labs(title = "Scatterplot de datos de autos del año 1993",
subtitle = "Rendimiento del auto en la ciudad en función del peso del auto",
x = "Rendimiento", y = "Peso")
cor.test(bdims$wgt, bdims$hgt, method = "pearson")
cor.test(cars$weight, cars$mpgCity, method = "pearson")
cor(mammals$BodyWt, mammals$BrainWt)
mammals %>%
select(Species, BodyWt, BrainWt) %>%
arrange(desc(BodyWt), desc(BrainWt))
mammals2 <- mammals[!mammals$Species%in%c('Africanelephant','Asianelephant'),]
ggplot(data=mammals2, aes(x=BodyWt, y=BrainWt)) +
geom_point() +
labs(title = "Scatterplot de Mamíferos sin puntos máximos", subtitle = "Peso cerebral en función del peso corporal", x = "Peso corporal ", y = "Peso cerebral")
cor(mammals2$BodyWt, mammals2$BrainWt, method="pearson")
mammalslog <- mammals %>%
select(BodyWt, BrainWt) %>%
mutate(BodyWt=log(BodyWt),
BrainWt=log(BrainWt))
ggplot(data=mammalslog, aes(x=BodyWt, y=BrainWt)) +
geom_point() +
labs(title = "Scatterplot de Mamíferos con logaritmo", subtitle = "Peso cerebral en función del peso corporal", x = "Peso corporal ", y = "Peso cerebral")
cor(mammalslog$BodyWt, mammalslog$BrainWt, method="pearson")
cor(mammals$BodyWt, mammals$BrainWt, method="spearman")
cor(mammalslog$BodyWt, mammalslog$BrainWt, method="spearman")
lm.cintura = lm(wgt ~ hip.gi, data=bdims)
IC = predict(lm.cintura, newdata = new.input, interval = "confidence", level=0.95)
IP = predict(lm.cintura, newdata = new.input, interval = "prediction", level=0.95)
lm.cintura = lm(wgt ~ hip.gi, data=bdims)
new.input = data.frame("hip.gi"=100)
IC = predict(lm.cintura, newdata = new.input, interval = "confidence", level=0.95)
IP = predict(lm.cintura, newdata = new.input, interval = "prediction", level=0.95)
IC
IP
lm.altura = lm(wgt ~ hgt, data=bdims)
new.input2 = data.frame("hgt"=175)
IC = predict(lm.altura, newdata = new.input2, interval = "confidence", level=0.95)
IP = predict(lm.altura, newdata = new.input2, interval = "prediction", level=0.95)
IC
IP
new.input3 = data.frame("hip.gi"=c(80,95,125,95))
IC = predict(lm.cintura, newdata = new.input3, interval = "confidence", level=0.95)
IP = predict(lm.cintura, newdata = new.input3, interval = "prediction", level=0.95)
IC
IP
library("datasets")
library("dplyr")
library("ggplot2")
library("tidyverse")
library("openintro")
attach(bdims)
lm.cintura = lm(wgt ~ hip.gi, data=bdims)
new.input = data.frame("hip.gi"=100)
IC = predict(lm.cintura, newdata = new.input, interval = "confidence", level=0.95)
IP = predict(lm.cintura, newdata = new.input, interval = "prediction", level=0.95)
IC
IP
lm.altura = lm(wgt ~ hgt, data=bdims)
new.input2 = data.frame("hgt"=175)
IC2 = predict(lm.altura, newdata = new.input2, interval = "confidence", level=0.95)
IP2 = predict(lm.altura, newdata = new.input2, interval = "prediction", level=0.95)
IC2
IP2
new.input3 = data.frame("hip.gi"=c(80,95,125,95))
IC3 = predict(lm.cintura, newdata = new.input3, interval = "confidence", level=0.95)
IC3
new.input4 = data.frame("hip.gi"=c(80,95,125))
IC4 = predict(lm.cintura, newdata = new.input4, interval = "prediction", level=0.95)
IC4
install.packages("investr")
library("investr")
new.input5 = data.frame("hgt"=c(80,95,125))
new.input5 = data.frame("hgt"=c(80,95,125))
IC5 = predFit(lm.altura, newdata = new.input5, interval = "confidence",
IC5 = predFit(lm.altura, newdata = new.input5, interval = "confidence", level=0.95, adjust = 'Scheffe)
IC5 = predFit(lm.altura, newdata = new.input5, interval = "confidence", adjust = 'Scheffe)
IC5 = predFit(lm.altura, newdata = new.input5, interval = "confidence",
level=0.95, adjust = 'Scheffe')
IC5
summary(lm.cintura)
MSRes_cintura = 8.636**2
MSRes_cintura
summary(lm.altura)
MSRes_altura
MSRes_altura = 9.308**2
MSRes_altura
ggplot(bdims, aes(x=hip.gi, y=wgt)) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función del contorno de cintura",
x = "Cintura", y = "Peso") +
geom_smooth(method=lm , color="black", se=FALSE) +
help(geom)
ggplot(bdims, aes(x=hip.gi, y=wgt)) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función del contorno de cintura",
x = "Cintura", y = "Peso") +
geom_smooth(method=lm , color="black", se=FALSE) +
help("geom_smooth")
ggplot(bdims, aes(x=hip.gi, y=wgt)) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función del contorno de cintura",
x = "Cintura", y = "Peso") +
geom_smooth(method=lm , color="black", se=FALSE) +
help("geom_smooth")
help("geom_smooth")
ggplot(bdims, aes(x=hip.gi, y=wgt)) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función del contorno de cintura",
x = "Cintura", y = "Peso") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)
ggplot(bdims, aes(x=hip.gi, y=wgt)) +
geom_point() +
theme_minimal() +
labs(title = "Scatterplot de medidas corporales en humanos",
subtitle = "Peso en función del contorno de cintura",
x = "Cintura", y = "Peso") +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE, alpha=0.5)
observeddata <- cbind(predict(lm.cintura, interval = 'predictoon'))
observeddata <- cbind(predict(lm.cintura, interval = 'prediction'))
observeddata
observeddata <- cbind(bdims$hip.gi,
predict(lm.cintura, interval = 'prediction'))
observeddata
observeddata <- cbind(response=bdims$hip.gi,
predict(lm.cintura, interval = 'prediction'))
observeddata
observeddata <- cbind('response'=bdims$hip.gi,
predict(lm.cintura, interval = 'prediction'))
observeddata <- cbind('response'=bdims$hip.gi,
predict(lm.cintura, interval = 'prediction'))
observeddata <- cbind('response'=bdims$hip.gi, predict(lm.cintura, interval = 'prediction'))
observeddata <- cbind(response=bdims$hip.gi, predict(lm.cintura, interval = 'prediction'))
observeddata
ggplot(data = observeddata, aes(x = response, y = fit, ymin = lwr, ymax = upr)) +
geom_point() +
geom_ribbon(alpha = .3)    # set opacity so points are visible
observeddata <- as.data.frame(response=bdims$hip.gi, predict(lm.cintura, interval = 'prediction'))
ggplot(data = observeddata, aes(x = response, y = fit, ymin = lwr, ymax = upr)) +
geom_point() +
geom_ribbon(alpha = .3)    # set opacity so points are visible
observeddata
observeddata %>%
mutate(response=bdims$hip.gi)
ggplot(data = observeddata, aes(x = response, y = fit, ymin = lwr, ymax = upr)) +
geom_point() +
geom_ribbon(alpha = .3)    # set opacity so points are visible
ggplot(data = observeddata, aes(x = 'response', y = 'fit', ymin = 'lwr', ymax = 'upr')) +
geom_point() +
geom_ribbon(alpha = .3)    # set opacity so points are visible
