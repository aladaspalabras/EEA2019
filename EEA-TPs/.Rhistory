l3 = c('Abasto', 'Balvanera'),
rooms = c(3, 2),
bathrooms = c(2, 3),
surface_total = c(120, 100),
surface_covered = c(120, 80),
property_type = c('Departamento', 'PH')
)
nuevos_casos %>%
mutate(predict = predict(modelo, newdata = .)) %>%
select(l3, predict, everything())
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_sin_l3)
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price)) %>%
arrange(media_precio)
precios
precios$clusters <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="clusters")
precios
precios %>%
count(clusters)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios
precios %>%
count(bins)
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
properties_barrios
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
nrow(properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,])
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total-surface_covered)
properties_barriosYpatio
modelo_barriosYpatio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio+ property_type, data=properties_barriosYpatio)
summary(modelo_barriosYpatio)
resid_barriosYpatio <- properties_barriosYpatio %>%
add_residuals(modelo_barriosYpatio)
resid_barriosYpatio
mean(resid_barriosYpatio$resid)
plot(modelo_barriosYpatio)
model_log = lm(log(price) ~ log(rooms) + log(bathrooms) + log(surface_covered) + property_type +
barrios + surface_patio, data=properties_barriosYpatio)
summary(model_log)
propTypes <- properties_barriosYpatio %>%
group_by(property_type) %>%
nest()
propTypes
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes
results <- propTypes %>%
mutate(glnc = map(model, glance),
agmnt = map2(model,data,augment))
results
results
library(tidyverse)
library(OneR)
library(broom)
library(modelr)
properties <- read_rds('ar_properties.rds')
modelo <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo)
nuevos_casos <- data.frame(
l3 = c('Abasto', 'Balvanera'),
rooms = c(3, 2),
bathrooms = c(2, 3),
surface_total = c(120, 100),
surface_covered = c(120, 80),
property_type = c('Departamento', 'PH')
)
nuevos_casos %>%
mutate(predict = predict(modelo, newdata = .)) %>%
select(l3, predict, everything())
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_sin_l3)
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price)) %>%
arrange(media_precio)
precios
precios$clusters <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="clusters")
precios
precios %>%
count(clusters)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios
precios %>%
count(bins)
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
properties_barrios
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
nrow(properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,])
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total-surface_covered)
properties_barriosYpatio
modelo_barriosYpatio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio+ property_type, data=properties_barriosYpatio)
summary(modelo_barriosYpatio)
resid_barriosYpatio <- properties_barriosYpatio %>%
add_residuals(modelo_barriosYpatio)
resid_barriosYpatio
mean(resid_barriosYpatio$resid)
plot(modelo_barriosYpatio)
model_log = lm(log(price) ~ log(rooms) + log(bathrooms) + log(surface_covered) + property_type +
barrios + surface_patio, data=properties_barriosYpatio)
summary(model_log)
propTypes <- properties_barriosYpatio %>%
group_by(property_type) %>%
nest()
propTypes
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes
results <- propTypes %>%
mutate(glnc = map(model, glance),
agmnt = map2(model,data,augment))
results
library(tidyverse)
library(OneR)
library(broom)
library(modelr)
properties <- read_rds('ar_properties.rds')
modelo <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo)
nuevos_casos <- data.frame(
l3 = c('Abasto', 'Balvanera'),
rooms = c(3, 2),
bathrooms = c(2, 3),
surface_total = c(120, 100),
surface_covered = c(120, 80),
property_type = c('Departamento', 'PH')
)
nuevos_casos %>%
mutate(predict = predict(modelo, newdata = .)) %>%
select(l3, predict, everything())
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_sin_l3)
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price)) %>%
arrange(media_precio)
precios
precios$clusters <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="clusters")
precios
precios %>%
count(clusters)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios
precios %>%
count(bins)
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
properties_barrios
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
nrow(properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,])
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total-surface_covered)
properties_barriosYpatio
modelo_barriosYpatio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio+ property_type, data=properties_barriosYpatio)
summary(modelo_barriosYpatio)
resid_barriosYpatio <- properties_barriosYpatio %>%
add_residuals(modelo_barriosYpatio)
resid_barriosYpatio
mean(resid_barriosYpatio$resid)
plot(modelo_barriosYpatio)
model_log = lm(log(price) ~ log(rooms) + log(bathrooms) + log(surface_covered) + property_type +
barrios + surface_patio, data=properties_barriosYpatio)
summary(model_log)
propTypes <- properties_barriosYpatio %>%
group_by(property_type) %>%
nest()
propTypes
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes
get_coefficients <- function(mod){
c <- coef(mod) %>%
as.list() %>%
as_tibble()
return(c)
}
results <- propTypes %>%
mutate(coeff = map(model, get_coefficients))
results
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
library(tidyverse)
library(OneR)
library(broom)
library(modelr)
properties <- read_rds('ar_properties.rds')
modelo <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo)
nuevos_casos <- data.frame(
l3 = c('Abasto', 'Balvanera'),
rooms = c(3, 2),
bathrooms = c(2, 3),
surface_total = c(120, 100),
surface_covered = c(120, 80),
property_type = c('Departamento', 'PH')
)
nuevos_casos %>%
mutate(predict = predict(modelo, newdata = .)) %>%
select(l3, predict, everything())
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_sin_l3)
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price)) %>%
arrange(media_precio)
precios
precios$clusters <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="clusters")
precios
precios %>%
count(clusters)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios
precios %>%
count(bins)
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
properties_barrios
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
nrow(properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,])
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total-surface_covered)
properties_barriosYpatio
modelo_barriosYpatio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio+ property_type, data=properties_barriosYpatio)
summary(modelo_barriosYpatio)
resid_barriosYpatio <- properties_barriosYpatio %>%
add_residuals(modelo_barriosYpatio)
resid_barriosYpatio
mean(resid_barriosYpatio$resid)
plot(modelo_barriosYpatio)
model_log = lm(log(price) ~ log(rooms) + log(bathrooms) + log(surface_covered) + property_type +
barrios + surface_patio, data=properties_barriosYpatio)
summary(model_log)
propTypes <- properties_barriosYpatio %>%
group_by(property_type) %>%
nest()
propTypes
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes
get_coefficients <- function(mod){
c <- coef(mod) %>%
as.list() %>%
as_tibble()
return(c)
}
results <- propTypes %>%
mutate(coeff = map(model, get_coefficients))
results
library(tidyverse)
library(OneR)
library(broom)
library(modelr)
properties <- read_rds('ar_properties.rds')
modelo <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo)
nuevos_casos <- data.frame(
l3 = c('Abasto', 'Balvanera'),
rooms = c(3, 2),
bathrooms = c(2, 3),
surface_total = c(120, 100),
surface_covered = c(120, 80),
property_type = c('Departamento', 'PH')
)
nuevos_casos %>%
mutate(predict = predict(modelo, newdata = .)) %>%
select(l3, predict, everything())
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_sin_l3)
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price)) %>%
arrange(media_precio)
precios
precios$clusters <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="clusters")
precios
precios %>%
count(clusters)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios
precios %>%
count(bins)
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
properties_barrios
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
nrow(properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,])
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total-surface_covered)
properties_barriosYpatio
modelo_barriosYpatio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio+ property_type, data=properties_barriosYpatio)
summary(modelo_barriosYpatio)
resid_barriosYpatio <- properties_barriosYpatio %>%
add_residuals(modelo_barriosYpatio)
resid_barriosYpatio
mean(resid_barriosYpatio$resid)
plot(modelo_barriosYpatio)
model_log = lm(log(price) ~ log(rooms) + log(bathrooms) + log(surface_covered) + property_type +
barrios + surface_patio, data=properties_barriosYpatio)
summary(model_log)
propTypes <- properties_barriosYpatio %>%
group_by(property_type) %>%
nest()
propTypes
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes
summary(propTypes$model[[1]])   # datos del modelo Casa
summary(propTypes$model[[2]])   # datos del modelo Departamento
summary(propTypes$model[[3]])   # datos del modelo PH
library(tidyverse)
library(OneR)
library(broom)
library(modelr)
properties <- read_rds('ar_properties.rds')
modelo <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo)
nuevos_casos <- data.frame(
l3 = c('Abasto', 'Balvanera'),
rooms = c(3, 2),
bathrooms = c(2, 3),
surface_total = c(120, 100),
surface_covered = c(120, 80),
property_type = c('Departamento', 'PH')
)
nuevos_casos %>%
mutate(predict = predict(modelo, newdata = .)) %>%
select(l3, predict, everything())
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_sin_l3)
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price)) %>%
arrange(media_precio)
precios
precios$clusters <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="clusters")
precios
precios %>%
count(clusters)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios
precios %>%
count(bins)
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
properties_barrios
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
nrow(properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,])
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total-surface_covered)
properties_barriosYpatio
modelo_barriosYpatio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio+ property_type, data=properties_barriosYpatio)
summary(modelo_barriosYpatio)
resid_barriosYpatio <- properties_barriosYpatio %>%
add_residuals(modelo_barriosYpatio)
resid_barriosYpatio
mean(resid_barriosYpatio$resid)
plot(modelo_barriosYpatio)
model_log = lm(log(price) ~ log(rooms) + log(bathrooms) + log(surface_covered) + property_type +
barrios + surface_patio, data=properties_barriosYpatio)
summary(model_log)
propTypes <- properties_barriosYpatio %>%
group_by(property_type) %>%
nest()
propTypes
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes
get_coefficients <- function(mod){
c <- coef(mod) %>%
as.list() %>%
as_tibble()
return(c)
}
results <- propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance),
agmnt = map2(model,data,augment))
results
results %>%
unnest(coeff)
results %>%
unnest(glnc)
results %>%
unnest(agmnt) %>%
select(property_type, .resid, .std.resid) %>%
group_by(property_type) %>%
summarise(resid_min = round(min(.resid)),
resid_1Q = round(quantile(.resid, 0)),
resid_median = round(median(.resid)),
resid_3Q = round(quantile(.resid, 0.75)),
resid_max = round(max(.resid)))
