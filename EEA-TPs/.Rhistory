properties <- read_rds('ar_properties.rds')
modelo <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
length(unique(properties$l3))
summary(modelo)
nuevos_casos <- data.frame(
l3 = c('Abasto', 'Balvanera'),
rooms = c(3, 2),
bathrooms = c(2, 3),
surface_total = c(120, 100),
surface_covered = c(120, 80),
property_type = c('Departamento', 'PH')
)
nuevos_casos %>%
mutate(predict = predict(modelo, newdata = .)) %>%
select(l3, predict, everything())
modelo_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_l3)
plot(sort(properties$price, decreasing = FALSE),
main  = 'Precios ordenados en forma creciente',
ylab = 'Precios',
xlab = 'Índice',
col = 'cyan4')
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price))
precios
precios <- properties %>%
select(l3, price) %>%
group_by(l3) %>%
summarise(media_precio = mean(price)) %>%
arrange(media_precio)
precios
precios$bins <- as.numeric(bin(precios$media_precio,
precios$bins <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=c('bajo','medio','alto'),
method="content"))
precios
precios$bins <- as.numeric(bin(precios$media_precio,
precios$bins <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=c('bajo','medio','alto'),
method="content"))
precios
precios
precios$bins <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=c('bajo','medio','alto'),
method="content"))
precios
precios$bins <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=c('bajo','medio','alto'),
method="content"))
precios
precios$clusters <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=NULL,
method="clusters",
na.omit=TRUE))
precios
precios$bins <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=c("alto, medio", "bajo"),
method="content"))
precios$bins <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=c("alto", "medio", "bajo"),
method="content"))
precios
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("alto", "medio", "bajo"),
method="content"))
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("alto", "medio", "bajo"),
method="content")
precios
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios$clusters <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="clusters")
precios
precios %>%
group_by(bins) %>%
summarise(n = count(n))
precios %>%
group_by(bins) %>%
summarise(n = count(n))
precios %>%
group_by(bins) %>%
summarise(n = count(bins))
precios %>%
group_by(bins) %>%
summarise(n = nrow())
precios %>%
count(bins, clusters)
precios %>%
count(clusters)
precios %>%
count(bins)
precios[,c(l3, bins)]
precios[,c('l3', 'bins')]
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
propert
properties_barrios
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3') %>%
rename(c('bins'='barrios'))
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3') %>%
rename(.,c('bins'='barrios'))
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
properties_barrios
model_con_barrios <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
properties_barrios$barrios<-as_factor(properties_barrios$barrios)
properties_barrios
model_con_barrios <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
unique(properties_barrios$barrios)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=NULL,
method="content")
precios
precios$bins <- as.numeric(bin(precios$media_precio,
nbins=3,
labels=NULL,
method="content"))
precios
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
unique(properties_barrios$barrios)
model_con_barrios <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
sum(is.na(properties_barrios$barrios)
sum(is.na(properties_barrios$barrios))
is.na(properties_barrios$barrios)
sum(is.na(properties_barrios$barrios))
precios$bins <- as.factor(bin(precios$media_precio,
nbins=3,
labels=NULL,
method="content"))
precios
precios$bins <- as.factor(bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content"))
precios
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
model_con_barrios <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
precios$bins <- bin(precios$media_precio,
nbins=3,
labels=c("bajo", "medio", "alto"),
method="content")
precios
properties_barrios <- left_join(properties, precios[,c('l3', 'bins')], by='l3')
names(properties_barrios)[names(properties_barrios) == 'bins'] <- 'barrios'
sum(is.na(properties_barrios$barrios))
properties_barrios
model_con_barrios <- lm(price ~ l3 + rooms + bathrooms + surface_total + surface_covered + property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
model_con_barrios <- lm(price ~ barrios, data=properties_barrios)
summary(model_con_barrios)
model_con_barrios <- lm(price ~ l3 + barrios, data=properties_barrios)
summary(model_con_barrios)
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
summary(model_con_barrios)
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios + l3, data=properties_barrios)
summary(model_con_barrios)
model_con_barrios <- lm(price ~ rooms + bathrooms + surface_total + surface_covered +
property_type + barrios, data=properties_barrios)
summary(model_con_barrios)
properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total]
properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,]
properties_barrios[properties_barrios$surface_covered < properties_barrios$surface_total,]
properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,]
properties[properties$surface_covered > properties$surface_total,]
properties_barriosYpatio < properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered, surface_total,
TRUE, 'bla'))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered, surface_total,
TRUE, 'bla'))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total,
TRUE ~ 'bla'))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total,
TRUE ~ '9'))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total,
TRUE ~ 9))
properties_barriosYpatio
arrange(properties_barriosYpatio$surface_patio)
arrange(properties_barriosYpatio)
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered,
TRUE ~ 9))
arrange(properties_barriosYpatio)
arrange(properties_barriosYpatio$surface_patio)
properties_barriosYpatio %>%
arrange(surface_patio)
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered,
TRUE ~ 9))
properties_barriosYpatio %>%
arrange(surface_patio)
View(properties_barriosYpatio)
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered,
TRUE ~ 'x'))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered,
TRUE ~ '10000000'))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered,
TRUE ~ '10000000'))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered,
TRUE ~ 10000000))
properties_barriosYpatio %>%
arrange(surface_patio)
View(properties_barriosYpatio)
properties_barriosYpatio
properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,]
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered))
properties_barriosYpatio
properties_barrios[properties_barrios$surface_covered == properties_barrios$surface_total,]
properties_barrios[properties_barrios$surface_covered < properties_barrios$surface_total,]
properties_barrios[properties_barrios$surface_covered < properties_barrios$surface_total,]
properties_barrios[properties_barrios$surface_covered > properties_barrios$surface_total,]
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered))
properties_barriosYpatio
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
modelo_sin_l3 <- lm(price ~ rooms + bathrooms + surface_total + surface_covered + property_type,
data=properties)
summary(modelo_sin_l3)
modelo_con_patio <- lm(price ~ l3 + rooms + bathrooms + surface_covered + surface_patio
property_type, data=properties_barriosYpatio)
modelo_con_patio <- lm(price ~ l3 + rooms + bathrooms + surface_covered + surface_patio +
property_type, data=properties_barriosYpatio)
summary(modelo_con_patio)
modelo_con_patio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio +
property_type, data=properties_barriosYpatio)
summary(modelo_con_patio)
modelo_barriosYpatio <- lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio +
property_type, data=properties_barriosYpatio)
summary(modelo_barriosYpatio)
propTypes <- properties_barriosYpatio %>%
group_by(property_type) %>%
nest()
propTypes
propTypes$models <- propTypes %>%
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio + property_type,
data=data)
propTypes$models <- propTypes %>%
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio + property_type,
data=as.data.frame(data))
propTypes$models <- propTypes %>%
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio,
data=as.data.frame(data))
propTypes$data[0]
propTypes[[1]]
propTypes$data[[1]]
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio,
data=propTypes$data[[1]])
propTypes %>%
print(property_type)
propTypes %>%
print(data)
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
model_propType <- propTypes %>%
mutate(model = map(data, patio_model))
model_propType
propTypes %>%
mutate(model = map(data, patio_model))
model_propType
propTypes['Casa','model]
propTypes['Casa','model']
propTypes[,'model']
propTypes[['Casa','model']]
propTypes[property_type=='Casa','model']
propTypes[property_type=='Casa',model]
propTypes[property_type=='Casa', 'model']
propType
propTypes %>%
mutate(model = map(propTypes, patio_model))
propTypes
patio_model <- function(df) {
lm(price ~ barrios + rooms + bathrooms + surface_covered + surface_patio, data=df)
}
propTypes %>%
mutate(model = map(propTypes, patio_model))
propTypes %>%
mutate(model = map(data, patio_model))
propType
propTypes
propTypes[property_type=='Casa', 'model']
propTypes[property_type=='Casa']
propTypes[property_type=='Casa',]
propTypes
propTypes
propTypes %>%
mutate(model = map(data, patio_model))
propTypes
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes
propTypes
propTypes[property_type=='Casa',]
propTypes[property_type=='Casa',]
propTypes
propTypes[property_type=='PH',]
propTypes$property_type=='Casa'
propTypes %>%
selec(model)
propTypes %>%
select(model)
propTypes$model['Casa']
propTypes$model[['Casa']]
propTypes$model[property_type=='Casa']
propTypes$model[property_type=='Casa',]
propTypes
propTypes$model[[1]]
propTypes$model[[2]]
propTypes$model[[3]]
summ(modelo)
summary(modelo)
summary(propTypes$model[[1]])
coef(propTypes$model[[1]])
propTypes %>%
mutate(coeff = map(model, coef),
glnc = map(model, glance))
librery(broom)
library(broom)
propTypes %>%
mutate(coeff = map(model, coef),
glnc = map(model, glance))
propTypes %>%
mutate(coeff = map(model, coef),
glnc = map(model, glance)) %>%
unnest(coeff)
get_coefficients <- function(mod){
c <- coef(mod) %>%
as.data.frame() %>%
transpose()
return(c)
}
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff)
propTypes <- propTypes %>%
mutate(model = map(data, patio_model))
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance))
propTypes
propTypes$model[[3]]
coef(propTypes$model[[3]])
as.data.frame(coef(propTypes$model[[3]]))
traspose(as.data.frame(coef(propTypes$model[[3]])))
transpose(as.data.frame(coef(propTypes$model[[3]])))
coef(propTypes$model[[3]]) %>%
as.tibble()
coef(propTypes$model[[3]]) %>%
as.data.frame()
coef(propTypes$model[[3]]) %>%
as.data.frame() %>%
transpose()
coef(propTypes$model[[3]])
coef(propTypes$model[[3]])%>%
transpose()
coef(propTypes$model[[3]])%>%
typeof()
coef(propTypes$model[[3]])%>%
class()
coef(propTypes$model[[3]])
help(coef)
coef(propTypes$model[[3]]) %>%
as.tbl()
coef(propTypes$model[[3]]) %>%
as_tibble()
coef(propTypes$model[[3]]) %>%
transpose()
coef(propTypes$model[[3]]) %>%
transpose()
coef(propTypes$model[[3]]) %>%
as.tibble()
coef(propTypes$model[[3]]) %>%
names()
coef(propTypes$model[[3]]) %>%
as_tibble(ronames = names())
coef(propTypes$model[[3]]) %>%
as_tibble(ronames = names(.))
coef(propTypes$model[[3]])
coef(propTypes$model[[3]]) %>%
as.list()
coef(propTypes$model[[3]]) %>%
as.list() %>%
transpose()
coef(propTypes$model[[3]]) %>%
as.list() %>%
transpose() %>%
as.tibble()
coef(propTypes$model[[3]]) %>%
as.list() %>%
transpose() %>%
as_tibble()
coef(propTypes$model[[3]]) %>%
as.list()
coef(propTypes$model[[3]]) %>%
as.list() %>%
as_tibble()
get_coefficients <- function(mod){
c <- coef(mod) %>%
as.list() %>%
as_tibble()
return(c)
}
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance))
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff)
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc)
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc, .drop = TRUE)
propTypes
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc, .drop = TRUE) %>%
transpose()
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc, .drop = TRUE) %>%
transpose_df()
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc, .drop = TRUE) %>%
as.data.frame() %>%
transpose_df()
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc, .drop = TRUE) %>%
as.data.frame() %>%
transpose()
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc, .drop = TRUE) %>%
as.data.frame()
propTypes %>%
mutate(coeff = map(model, get_coefficients),
glnc = map(model, glance)) %>%
unnest(coeff, glnc, .drop = TRUE)
summary(propTypes$model[[1]])
summary(propTypes$model[[2]])
summary(propTypes$model[[3]])
model_log = lm(price ~ log(rooms) + log(bathrooms) + log(surface_covered) + property_type +
barrios + surface_patio, data=properties_barriosYpatio)
summary(model_log)
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = case_when(surface_total>=surface_covered ~ surface_total-surface_covered
TRUE ~ NA))
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total>=surface_covered ~ surface_total-surface_covered)
properties_barriosYpatio <- properties_barrios %>%
mutate(surface_patio = surface_total-surface_covered)
properties_barriosYpatio
properties_barriosYpatio[properties_barriosYpatio$surface_patio<0]
properties_barriosYpatio[properties_barriosYpatio$surface_patio<0,]
properties_barriosYpatio
